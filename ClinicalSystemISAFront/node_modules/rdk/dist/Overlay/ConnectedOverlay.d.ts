import React from 'react';
import { OverlayTrigger, TriggerTypes } from './OverlayTrigger';
import { Position, ReferenceObject, Placement } from '../Position';
export interface OverlayEvent {
    type: TriggerTypes;
    nativeEvent: any;
}
export interface ConnectedOverlayProps {
    content: any;
    reference?: ReferenceObject | HTMLElement | any;
    placement: Placement;
    modifiers?: any;
    visible: boolean;
    className?: any;
    trigger?: TriggerTypes[] | TriggerTypes;
    closeOnBodyClick: boolean;
    closeOnEscape: boolean;
    appendToBody?: boolean;
    followCursor?: boolean;
    zIndex: number;
    onActivate?: (event: OverlayEvent) => void;
    onDeactivate?: (event: OverlayEvent) => void;
}
export declare class ConnectedOverlay extends React.Component<ConnectedOverlayProps> {
    static defaultProps: Partial<ConnectedOverlayProps>;
    triggerRef: OverlayTrigger | null;
    positionRef: Position | null;
    getReference(): any;
    onClickOutside(event: MouseEvent): void;
    onEscape(event: KeyboardEvent): void;
    updatePosition(): void;
    renderContent(): JSX.Element;
    render(): JSX.Element;
}
