import { ReactNode, Component } from 'react';
export declare type TriggerTypes = 'hover' | 'click' | 'focus' | 'key';
interface OverlayTriggerProps {
    trigger: TriggerTypes | TriggerTypes[];
    children: ReactNode;
    className?: any;
    onActivate: (event: {
        type: TriggerTypes;
        nativeEvent: any;
    }) => void;
    onDeactivate: (event: {
        type: TriggerTypes;
        nativeEvent: any;
    }) => void;
}
export declare class OverlayTrigger extends Component<OverlayTriggerProps> {
    timeout: any;
    element: HTMLSpanElement | null;
    hasTrigger(type: TriggerTypes): boolean;
    onFocus(event: any): void;
    onBlur(event: any): void;
    onMouseEnter(event: MouseEvent): void;
    onMouseLeave(event: MouseEvent): void;
    onClick(event: MouseEvent): void;
    activate({ type, nativeEvent }: {
        type: any;
        nativeEvent: any;
    }): void;
    deactivate({ type, nativeEvent }: {
        type: any;
        nativeEvent: any;
    }): void;
    render(): JSX.Element;
}
export {};
