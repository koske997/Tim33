import { Component } from 'react';
import PopperJS from 'popper.js';
export declare type Placement = PopperJS.Placement;
export interface ReferenceObject {
    top: number;
    left: number;
    height: number;
    width: number;
}
interface PositionProps {
    reference: ReferenceObject | HTMLElement;
    placement?: Placement;
    modifiers?: PopperJS.Modifiers;
    className?: any;
    style?: any;
    followCursor?: boolean;
}
export declare class Position extends Component<PositionProps> {
    static defaultProps: Partial<PositionProps>;
    element: any;
    popperInstance?: PopperJS;
    mouse: {
        pageX: number;
        pageY: number;
    };
    componentDidUpdate(prevProps: PositionProps): void;
    componentWillUnmount(): void;
    updatePosition(): void;
    getReference(): HTMLElement | {
        getBoundingClientRect: () => {
            top: number;
            right: number;
            bottom: number;
            left: number;
            width: number;
            height: number;
        };
        clientWidth: number;
        clientHeight: number;
    };
    onMouseMove: ({ pageX, pageY }: MouseEvent) => void;
    createPopper(element?: any): void;
    render(): JSX.Element;
}
export {};
