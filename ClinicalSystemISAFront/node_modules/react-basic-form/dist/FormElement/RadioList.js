"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var RadioList = function RadioList(_ref) {
  var defaultValue = _ref.defaultValue,
      id = _ref.id,
      options = _ref.options,
      props = _objectWithoutProperties(_ref, ["defaultValue", "id", "options"]);

  if (options.length === 0) return null;
  return _react["default"].createElement("div", {
    id: id,
    className: "inline-items"
  }, options.map(function (opt) {
    var label = opt;
    var value = opt;

    if (_typeof(opt) === 'object') {
      label = opt.label;
      value = opt.value;
    }

    return _react["default"].createElement("span", {
      className: "item-wrap",
      key: label
    }, _react["default"].createElement("label", {
      className: "".concat(props.type, " item")
    }, label, _react["default"].createElement("input", _extends({}, props, {
      value: value,
      defaultChecked: Array.isArray(defaultValue) ? defaultValue.includes(value) : defaultValue === value
    })), _react["default"].createElement("span", {
      className: "checkmark"
    })));
  }));
};

RadioList.defaultProps = {
  type: 'radio',
  options: []
};
var _default = RadioList;
exports["default"] = _default;