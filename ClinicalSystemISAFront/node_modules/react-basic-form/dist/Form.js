"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Form =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Form, _React$Component);

  function Form() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Form);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      errors: []
    });

    _defineProperty(_assertThisInitialized(_this), "_handleChange", function (e) {
      var _e$target = e.target,
          name = _e$target.name,
          value = _e$target.value,
          required = _e$target.required;

      if (_this.hasError(name)) {
        _this.isValid({
          name: name,
          value: value,
          required: required
        }, true);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "_handleSubmit", function (e) {
      e.preventDefault();
      var _this$state = _this.state,
          isLoading = _this$state.isLoading,
          errors = _this$state.errors;
      if (isLoading) return;
      var _this$props = _this.props,
          onSubmit = _this$props.onSubmit,
          errorOnSubmit = _this$props.errorOnSubmit;
      var form = e.target;
      var names = (0, _utils.getFormNames)(form);
      var submitActions = {
        start: function start() {
          _this.setState({
            isLoading: true
          });
        },
        end: function end() {
          form.reset();

          _this.setState({
            isLoading: false
          });
        }
      };

      if (_this.isValidAll(form, names)) {
        var data = names.reduce(function (acc, name) {
          return _objectSpread({}, acc, _defineProperty({}, name, form.elements[name].value));
        }, {});

        if (onSubmit) {
          onSubmit(data, submitActions);
        }
      } else if (errorOnSubmit) {
        errorOnSubmit(errors);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "_showErrorMessage", function (name) {
      var _this$props2 = _this.props,
          errorMessages = _this$props2.errorMessages,
          defaultErrorMessage = _this$props2.defaultErrorMessage;
      var errorMessage = errorMessages[name] || defaultErrorMessage;
      if (_this.hasError(name)) return _react["default"].createElement("div", {
        className: "error-message"
      }, errorMessage);
    });

    _defineProperty(_assertThisInitialized(_this), "submit", function () {
      _this.form.dispatchEvent(new Event('submit'));
    });

    _defineProperty(_assertThisInitialized(_this), "isValid", function (_ref, setState) {
      var name = _ref.name,
          value = _ref.value,
          required = _ref.required;
      var validations = _this.props.validations;
      var defaultFieldIsValid = true;

      if (required) {
        defaultFieldIsValid = !!value;
      }

      var customFieldIsValid = true;

      if ((required || value) && validations[name]) {
        customFieldIsValid = validations[name](value);
      }

      var isValid = defaultFieldIsValid && customFieldIsValid;

      if (setState) {
        if (isValid) _this.removeError(name);else _this.addError(name);
      }

      return isValid;
    });

    return _this;
  }

  _createClass(Form, [{
    key: "isValidAll",
    value: function isValidAll(form, names) {
      var _this2 = this;

      return names.reduce(function (isValid, name) {
        var element = form.elements[name];
        var formElement = element.length > 0 && !element.nodeName ? element[0] : element;
        return _this2.isValid({
          name: name,
          value: element.type === 'checkbox' ? element.checked : element.value,
          required: formElement.required || name === 'g-recaptcha-response'
        }, true) && isValid;
      }, true);
    }
  }, {
    key: "hasError",
    value: function hasError(name) {
      var errors = this.state.errors;
      return errors.includes(name);
    }
  }, {
    key: "addError",
    value: function addError(name) {
      if (!this.hasError(name)) {
        this.setState(function (prevState) {
          return {
            errors: [].concat(_toConsumableArray(prevState.errors), [name])
          };
        });
      }
    }
  }, {
    key: "removeError",
    value: function removeError(name) {
      if (this.hasError(name)) {
        this.setState(function (prevState) {
          return {
            errors: prevState.errors.filter(function (e) {
              return e !== name;
            })
          };
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props3 = this.props,
          children = _this$props3.children,
          errorMessages = _this$props3.errorMessages,
          validations = _this$props3.validations,
          onSubmit = _this$props3.onSubmit,
          defaultErrorMessage = _this$props3.defaultErrorMessage,
          className = _this$props3.className,
          props = _objectWithoutProperties(_this$props3, ["children", "errorMessages", "validations", "onSubmit", "defaultErrorMessage", "className"]);

      var isLoading = this.state.isLoading;
      var contextProps = {
        showErrorMessage: this._showErrorMessage,
        onChange: this._handleChange,
        isValid: this.isValid,
        isLoading: isLoading
      };
      return _react["default"].createElement(_utils.Context.Provider, {
        value: contextProps
      }, _react["default"].createElement("form", _extends({
        onSubmit: this._handleSubmit,
        noValidate: true,
        className: (0, _classnames["default"])('react-basic-form', className)
      }, props, {
        ref: function ref(n) {
          _this3.form = n;
        }
      }), typeof children === 'function' ? children(contextProps) : children));
    }
  }]);

  return Form;
}(_react["default"].Component);

Form.defaultProps = {
  errorMessages: {},
  validations: {},
  defaultErrorMessage: 'This field is required.'
};
Form.propTypes = {
  errorMessages: _propTypes["default"].object,
  validations: _propTypes["default"].object,
  defaultErrorMessage: _propTypes["default"].string
};
var _default = Form;
exports["default"] = _default;