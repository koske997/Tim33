import { Component, ReactElement } from 'react';
import { PieArc, PieArcProps } from './PieArc';
import { PieArcLabel, PieArcLabelProps } from './PieArcLabel';
import { ColorSchemeType } from '../../common/color';
export interface PieArcSeriesProps {
    animated: boolean;
    outerRadius: number;
    innerRadius: number;
    data: any;
    arcWidth: number;
    doughnut: boolean;
    explode: boolean;
    displayAllLabels: boolean;
    height: number;
    width: number;
    label?: ReactElement<PieArcLabelProps, typeof PieArcLabel> | null;
    arc: ReactElement<PieArcProps, typeof PieArc>;
    colorScheme: ColorSchemeType;
}
export declare class PieArcSeries extends Component<PieArcSeriesProps> {
    static defaultProps: Partial<PieArcSeriesProps>;
    calculateRadius(): {
        outerRadius: number;
        innerRadius: number;
    };
    shouldDisplayLabel(arcData: any): boolean;
    calculateLabelPositions(outerArc: any, outerRadius: any): any;
    innerArc(innerRadius: number, outerRadius: number): (point: any) => string | null;
    calculateOuterRadius(outerRadius: any, point: any): any;
    centroid(innerRadius: number, outerRadius: number): (data: any) => [number, number];
    outerArc(outerRadius: number): import("d3-shape").Arc<any, import("d3-shape").DefaultArcObject>;
    render(): JSX.Element;
}
