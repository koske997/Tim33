import { Component, ReactElement } from 'react';
import { GeoProjection, GeoPath } from 'd3-geo';
import { ChartProps, ChartContainerChildProps } from '../common/containers/ChartContainer';
import { MapMarkerProps, MapMarker } from './MapMarker';
declare type MarkerElement = ReactElement<MapMarkerProps, typeof MapMarker>;
interface MapProps extends ChartProps {
    markers?: MarkerElement[];
    data: any;
}
export declare class Map extends Component<MapProps> {
    getProjection({ chartWidth, chartHeight }: ChartContainerChildProps): GeoProjection;
    renderMarker(marker: MarkerElement, index: number, projection: GeoProjection): JSX.Element | null;
    renderCountry(point: any, index: number, path: GeoPath): JSX.Element | null;
    renderChart(containerProps: ChartContainerChildProps): JSX.Element | null;
    render(): JSX.Element;
}
export {};
